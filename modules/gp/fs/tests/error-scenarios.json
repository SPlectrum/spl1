{
    "name": "Error handling scenarios",
    "description": "Tests error conditions and boundary cases for gp/fs API",
    "tags": ["error", "boundary", "fs"],
    "tests": [
        {
            "name": "read non-existent file",
            "description": "Test reading a file that does not exist",
            "action": "gp/fs/read",
            "params": {
                "file": "non-existent-file.txt"
            },
            "expect": {
                "error": "contains 'not found'"
            }
        },
        {
            "name": "write to invalid path",
            "description": "Test writing to a path outside app boundary",
            "action": "gp/fs/write",
            "params": {
                "file": "../../../outside-boundary.txt",
                "content": "This should fail"
            },
            "expect": {
                "error": "contains 'boundary'"
            }
        },
        {
            "name": "delete protected file",
            "description": "Test deleting a file that cannot be deleted",
            "action": "gp/fs/delete",
            "params": {
                "file": "protected-file.txt"
            },
            "expect": {
                "error": "any"
            }
        },
        {
            "name": "invalid parameters",
            "description": "Test operation with missing required parameters",
            "action": "gp/fs/copy",
            "params": {},
            "expect": {
                "error": "contains 'required'"
            }
        }
    ]
}